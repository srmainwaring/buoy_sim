cmake_minimum_required(VERSION 3.10.2 FATAL_ERROR)

#find_package(ignition-cmake2 REQUIRED)
find_package (Eigen3 3.3 REQUIRED NO_MODULE)



project(FreeSurface_Hydrodynamics)

set(CMAKE_CXX_FLAGS "-O3 -Wall -Wextra")

#find_package(ignition-plugin1 REQUIRED COMPONENTS register)
#set(IGN_PLUGIN_VER ${ignition-plugin1_VERSION_MAJOR})

#find_package(ignition-gazebo6 REQUIRED)


add_executable(Test_IncidentWave  Test_IncidentWave.cpp LinearIncidentWave.cpp)
target_link_libraries (Test_IncidentWave Eigen3::Eigen)

add_executable(Test_FS_Hydrodynamics Test_FS_Hydrodynamics.cpp FS_Hydrodynamics.cpp LinearIncidentWave.cpp)
target_link_libraries (Test_FS_Hydrodynamics Eigen3::Eigen)


#target_include_directories(FS_Hydrodynamics PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include)
set_property(TARGET Test_FS_Hydrodynamics PROPERTY CXX_STANDARD 17)
set_property(TARGET Test_IncidentWave PROPERTY CXX_STANDARD 17)
#target_link_libraries(FS_Hydrodynamics
#  PRIVATE ignition-plugin${IGN_PLUGIN_VER}::ignition-plugin${IGN_PLUGIN_VER}
#  PRIVATE ignition-gazebo6::ignition-gazebo6)


#install(TARGETS FS_Hydrodynamics DESTINATION ~/.ignition/gazebo/plugins)


find_package(Doxygen)
option(BUILD_DOCUMENTATION "Create and install the HTML based API        
documentation (requires Doxygen)" ${DOXYGEN_FOUND})

if (DOXYGEN_FOUND)
    # set input and output files
    set(DOXYGEN_IN ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile.in)
    set(DOXYGEN_OUT ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile)

    # request to configure the file
    configure_file(${DOXYGEN_IN} ${DOXYGEN_OUT} @ONLY)
    message("Doxygen build started")

    # note the option ALL which allows to build the docs together with the application
    add_custom_target( docs ALL
        COMMAND ${DOXYGEN_EXECUTABLE} ${DOXYGEN_OUT}
        WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}
        COMMENT "Generating API documentation with Doxygen"
        VERBATIM )
else (DOXYGEN_FOUND)
  message("Doxygen need to be installed to generate the doxygen documentation")
endif (DOXYGEN_FOUND)

